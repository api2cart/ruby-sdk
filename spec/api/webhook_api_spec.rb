=begin
#API2Cart OpenAPI

#API2Cart

The version of the OpenAPI document: 1.1
Contact: contact@api2cart.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::WebhookApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WebhookApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::WebhookApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WebhookApi' do
    it 'should create an instance of WebhookApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::WebhookApi)
    end
  end

  # unit tests for webhook_count
  # webhook.count
  # Count registered webhooks on the store.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :entity The entity you want to filter webhooks by (e.g. order or product)
  # @option opts [String] :action The action you want to filter webhooks by (e.g. order or product)
  # @option opts [Boolean] :active The webhook status you want to filter webhooks by
  # @return [WebhookCount200Response]
  describe 'webhook_count test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhook_create
  # webhook.create
  # Create webhook on the store and subscribe to it.
  # @param entity Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)
  # @param action Specify what action (event) will trigger the webhook (e.g add, delete, or update)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :callback Callback url that returns shipping rates. It should be able to accept POST requests with json data.
  # @option opts [String] :label The name you give to the webhook
  # @option opts [String] :fields Fields the webhook should send
  # @option opts [Boolean] :active Webhook status
  # @option opts [String] :store_id Defines store id where the webhook should be assigned
  # @return [BasketLiveShippingServiceCreate200Response]
  describe 'webhook_create test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhook_delete
  # webhook.delete
  # Delete registered webhook on the store.
  # @param id Webhook id
  # @param [Hash] opts the optional parameters
  # @return [AttributeDelete200Response]
  describe 'webhook_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhook_events
  # webhook.events
  # List all Webhooks that are available on this store.
  # @param [Hash] opts the optional parameters
  # @return [WebhookEvents200Response]
  describe 'webhook_events test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhook_list
  # webhook.list
  # List registered webhook on the store.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :entity The entity you want to filter webhooks by (e.g. order or product)
  # @option opts [String] :action The action you want to filter webhooks by (e.g. add, update, or delete)
  # @option opts [Boolean] :active The webhook status you want to filter webhooks by
  # @option opts [String] :ids List of —Åomma-separated webhook ids
  # @return [WebhookList200Response]
  describe 'webhook_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhook_update
  # webhook.update
  # Update Webhooks parameters.
  # @param id Webhook id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :callback Callback url that returns shipping rates. It should be able to accept POST requests with json data.
  # @option opts [String] :label The name you give to the webhook
  # @option opts [String] :fields Fields the webhook should send
  # @option opts [Boolean] :active Webhook status
  # @return [ProductImageUpdate200Response]
  describe 'webhook_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
