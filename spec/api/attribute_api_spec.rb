=begin
#API2Cart OpenAPI

#API2Cart

The version of the OpenAPI document: 1.1
Contact: contact@api2cart.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::AttributeApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AttributeApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::AttributeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AttributeApi' do
    it 'should create an instance of AttributeApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::AttributeApi)
    end
  end

  # unit tests for attribute_add
  # attribute.add
  # Add new attribute
  # @param type Defines attribute&#39;s type
  # @param name Defines attributes&#39;s name
  # @param [Hash] opts the optional parameters
  # @option opts [String] :code Entity code
  # @option opts [String] :store_id Store Id
  # @option opts [String] :lang_id Language id
  # @option opts [Boolean] :visible Set visibility status
  # @option opts [Boolean] :required Defines if the option is required
  # @option opts [Integer] :position Attribute&#x60;s position
  # @option opts [String] :attribute_group_id Filter by attribute_group_id
  # @option opts [String] :is_global Attribute saving scope
  # @option opts [Boolean] :is_searchable Use attribute in Quick Search
  # @option opts [String] :is_filterable Use In Layered Navigation
  # @option opts [Boolean] :is_comparable Comparable on Front-end
  # @option opts [Boolean] :is_html_allowed_on_front Allow HTML Tags on Frontend
  # @option opts [Boolean] :is_filterable_in_search Use In Search Results Layered Navigation
  # @option opts [Boolean] :is_configurable Use To Create Configurable Product
  # @option opts [Boolean] :is_visible_in_advanced_search Use in Advanced Search
  # @option opts [Boolean] :is_used_for_promo_rules Use for Promo Rule Conditions
  # @option opts [Boolean] :used_in_product_listing Used in Product Listing
  # @option opts [Boolean] :used_for_sort_by Used for Sorting in Product Listing
  # @option opts [String] :apply_to Types of products which can have this attribute
  # @return [AttributeAdd200Response]
  describe 'attribute_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_assign_group
  # attribute.assign.group
  # Assign attribute to the group
  # @param id Entity id
  # @param group_id Attribute group_id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :attribute_set_id Attribute set id
  # @return [AttributeAssignGroup200Response]
  describe 'attribute_assign_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_assign_set
  # attribute.assign.set
  # Assign attribute to the attribute set
  # @param id Entity id
  # @param attribute_set_id Attribute set id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :group_id Attribute group_id
  # @return [AttributeAssignGroup200Response]
  describe 'attribute_assign_set test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_attributeset_list
  # attribute.attributeset.list
  # Get attribute_set list
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [ModelResponseAttributeAttributesetList]
  describe 'attribute_attributeset_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_count
  # attribute.count
  # Get attributes count
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Defines attribute&#39;s type
  # @option opts [String] :attribute_set_id Filter items by attribute set id
  # @option opts [String] :store_id Store Id
  # @option opts [String] :lang_id Language id
  # @option opts [Boolean] :visible Filter items by visibility status
  # @option opts [Boolean] :required Defines if the option is required
  # @option opts [Boolean] :system True if attribute is system
  # @return [AttributeCount200Response]
  describe 'attribute_count test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_delete
  # attribute.delete
  # Delete attribute from store
  # @param id Entity id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @return [AttributeDelete200Response]
  describe 'attribute_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_group_list
  # attribute.group.list
  # Get attribute group list
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :attribute_set_id Attribute set id
  # @option opts [String] :lang_id Language id
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [ModelResponseAttributeGroupList]
  describe 'attribute_group_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_info
  # attribute.info
  # Get information about a specific global attribute by its ID.
  # @param id Entity id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :attribute_set_id Attribute set id
  # @option opts [String] :store_id Store Id
  # @option opts [String] :lang_id Language id
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [AttributeInfo200Response]
  describe 'attribute_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_list
  # attribute.list
  # Get a list of global attributes.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :attribute_ids Filter attributes by ids
  # @option opts [String] :attribute_set_id Filter items by attribute set id
  # @option opts [String] :store_id Store Id
  # @option opts [String] :lang_id Retrieves attributes on specified language id
  # @option opts [String] :type Defines attribute&#39;s type
  # @option opts [Boolean] :visible Filter items by visibility status
  # @option opts [Boolean] :required Defines if the option is required
  # @option opts [Boolean] :system True if attribute is system
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [ModelResponseAttributeList]
  describe 'attribute_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_type_list
  # attribute.type.list
  # Get list of supported attributes types
  # @param [Hash] opts the optional parameters
  # @return [AttributeTypeList200Response]
  describe 'attribute_type_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_unassign_group
  # attribute.unassign.group
  # Unassign attribute from group
  # @param id Entity id
  # @param group_id Customer group_id
  # @param [Hash] opts the optional parameters
  # @return [AttributeUnassignGroup200Response]
  describe 'attribute_unassign_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_unassign_set
  # attribute.unassign.set
  # Unassign attribute from attribute set
  # @param id Entity id
  # @param attribute_set_id Attribute set id
  # @param [Hash] opts the optional parameters
  # @return [AttributeUnassignGroup200Response]
  describe 'attribute_unassign_set test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_update
  # attribute.update
  # Update attribute data
  # @param id Entity id
  # @param name Defines new attributes&#39;s name
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @option opts [String] :lang_id Language id
  # @return [AttributeUpdate200Response]
  describe 'attribute_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_value_add
  # attribute.value.add
  # Add new value to attribute.
  # @param attribute_id Attribute Id
  # @param name Defines attribute value&#39;s name
  # @param [Hash] opts the optional parameters
  # @option opts [String] :code Entity code
  # @option opts [String] :description Defines attribute value&#39;s description
  # @option opts [String] :store_id Store Id
  # @option opts [String] :lang_id Language id
  # @return [AttributeAdd200Response]
  describe 'attribute_value_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_value_delete
  # attribute.value.delete
  # Delete attribute value.
  # @param id Entity id
  # @param attribute_id Attribute Id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @return [AttributeValueDelete200Response]
  describe 'attribute_value_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for attribute_value_update
  # attribute.value.update
  # Update attribute value.
  # @param id Defines attribute value&#39;s id
  # @param attribute_id Attribute Id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Defines attribute value&#39;s name
  # @option opts [String] :description Defines new attribute value&#39;s description
  # @option opts [String] :code Entity code
  # @option opts [String] :store_id Store Id
  # @option opts [String] :lang_id Language id
  # @return [AttributeUpdate200Response]
  describe 'attribute_value_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
