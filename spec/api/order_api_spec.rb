=begin
#API2Cart OpenAPI

#API2Cart

The version of the OpenAPI document: 1.1
Contact: contact@api2cart.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::OrderApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OrderApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::OrderApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrderApi' do
    it 'should create an instance of OrderApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::OrderApi)
    end
  end

  # unit tests for order_abandoned_list
  # order.abandoned.list
  # Get list of orders that were left by customers before completing the order.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :page_cursor Used to retrieve entities via cursor-based pagination (it can&#39;t be used with any other filtering parameter)
  # @option opts [String] :customer_id Retrieves orders specified by customer id
  # @option opts [String] :customer_email Retrieves orders specified by customer email
  # @option opts [String] :store_id Store Id
  # @option opts [String] :created_from Retrieve entities from their creation date
  # @option opts [String] :created_to Retrieve entities to their creation date
  # @option opts [String] :modified_from Retrieve entities from their modification date
  # @option opts [String] :modified_to Retrieve entities to their modification date
  # @option opts [Boolean] :skip_empty_email Filter empty emails
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [ModelResponseOrderAbandonedList]
  describe 'order_abandoned_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_add
  # order.add
  # Add a new order to the cart.
  # @param order_add 
  # @param [Hash] opts the optional parameters
  # @return [OrderAdd200Response]
  describe 'order_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_calculate
  # order.calculate
  # &lt;p&gt;Calculates the total cost of an order for a given customer and a set of products, as well as the available shipping methods based on the specified address. The calculation takes into account store product prices, discounts, taxes, shipping costs, and other store settings. The result includes a detailed breakdown of the final order cost by its components.&lt;/p&gt; &lt;p&gt;Note that the final totals, taxes, and other amounts must include the corresponding values for the selected shipping method.&lt;/p&gt;&lt;p&gt;The result of this method can be used when creating an order using the &lt;strong&gt;order.add&lt;/strong&gt; method.&lt;/p&gt;
  # @param order_calculate 
  # @param [Hash] opts the optional parameters
  # @return [OrderCalculate200Response]
  describe 'order_calculate test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_count
  # order.count
  # Count orders in store
  # @param [Hash] opts the optional parameters
  # @option opts [String] :order_ids Counts orders specified by order ids
  # @option opts [String] :ids Counts orders specified by ids
  # @option opts [String] :customer_id Counts orders quantity specified by customer id
  # @option opts [String] :store_id Counts orders quantity specified by store id
  # @option opts [String] :customer_email Counts orders quantity specified by customer email
  # @option opts [String] :order_status Counts orders quantity specified by order status
  # @option opts [Array<String>] :order_status_ids Retrieves orders specified by order statuses
  # @option opts [String] :ebay_order_status Counts orders quantity specified by order status
  # @option opts [String] :financial_status Counts orders quantity specified by financial status
  # @option opts [Array<String>] :financial_status_ids Retrieves orders count specified by financial status ids
  # @option opts [String] :fulfillment_channel Retrieves order with a fulfillment channel
  # @option opts [String] :fulfillment_status Create order with fulfillment status
  # @option opts [String] :shipping_method Retrieve entities according to shipping method
  # @option opts [String] :delivery_method Retrieves order with delivery method
  # @option opts [String] :tags Order tags
  # @option opts [String] :ship_node_type Retrieves order with ship node type
  # @option opts [String] :created_from Retrieve entities from their creation date
  # @option opts [String] :created_to Retrieve entities to their creation date
  # @option opts [String] :modified_from Retrieve entities from their modification date
  # @option opts [String] :modified_to Retrieve entities to their modification date
  # @return [OrderCount200Response]
  describe 'order_count test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_financial_status_list
  # order.financial_status.list
  # Retrieve list of financial statuses
  # @param [Hash] opts the optional parameters
  # @return [OrderFinancialStatusList200Response]
  describe 'order_financial_status_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_fulfillment_status_list
  # order.fulfillment_status.list
  # Retrieve list of fulfillment statuses
  # @param [Hash] opts the optional parameters
  # @option opts [String] :action Available statuses for the specified action.
  # @return [OrderFulfillmentStatusList200Response]
  describe 'order_fulfillment_status_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_info
  # order.info
  # Info about a specific order by ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :id Retrieves order info specified by id
  # @option opts [String] :order_id Retrieves order’s info specified by order id
  # @option opts [String] :store_id Defines store id where the order should be found
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @option opts [Boolean] :enable_cache If the value is &#39;true&#39; and order exist in our cache, we will return order.info response from cache
  # @option opts [Boolean] :use_latest_api_version Use the latest platform API version
  # @option opts [Integer] :rounding_precision &lt;p&gt;Specifies the rounding precision for fractional numeric values (such as prices, taxes, and weights).&lt;/p&gt; &lt;p&gt;Supported values range from &lt;b&gt;1&lt;/b&gt; to &lt;b&gt;6&lt;/b&gt;.&lt;/p&gt; &lt;p&gt;The default rounding precision may vary depending on the platform. You can retrieve the default value using the &lt;strong&gt;cart.info&lt;/strong&gt; method in the &lt;code&gt;default_rounding_precision&lt;/code&gt; field. &lt;/p&gt;&lt;p&gt;Values are rounded to the nearest number at the specified precision. Fractions of .5 or higher are rounded up, while fractions lower than .5 are rounded down.&lt;/p&gt;
  # @return [OrderInfo200Response]
  describe 'order_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_list
  # order.list
  # Get list of orders from store.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :page_cursor Used to retrieve orders via cursor-based pagination (it can&#39;t be used with any other filtering parameter)
  # @option opts [String] :ids Retrieves orders specified by ids
  # @option opts [String] :order_ids Retrieves orders specified by order ids
  # @option opts [String] :since_id Retrieve entities starting from the specified id.
  # @option opts [String] :store_id Store Id
  # @option opts [String] :customer_id Retrieves orders specified by customer id
  # @option opts [String] :customer_email Retrieves orders specified by customer email
  # @option opts [String] :basket_id Retrieves order’s info specified by basket id.
  # @option opts [String] :currency_id Currency Id
  # @option opts [String] :phone Filter orders by customer&#39;s phone number
  # @option opts [String] :order_status Retrieves orders specified by order status
  # @option opts [Array<String>] :order_status_ids Retrieves orders specified by order statuses
  # @option opts [String] :ebay_order_status Retrieves orders specified by order status
  # @option opts [String] :financial_status Retrieves orders specified by financial status
  # @option opts [Array<String>] :financial_status_ids Retrieves orders specified by financial status ids
  # @option opts [String] :fulfillment_status Create order with fulfillment status
  # @option opts [String] :return_status Retrieves orders specified by return status
  # @option opts [String] :fulfillment_channel Retrieves order with a fulfillment channel
  # @option opts [String] :shipping_method Retrieve entities according to shipping method
  # @option opts [String] :skip_order_ids Skipped orders by ids
  # @option opts [Boolean] :is_deleted Filter deleted orders
  # @option opts [String] :shipping_country_iso3 Retrieve entities according to shipping country
  # @option opts [String] :delivery_method Retrieves order with delivery method
  # @option opts [String] :ship_node_type Retrieves order with ship node type
  # @option opts [String] :created_to Retrieve entities to their creation date
  # @option opts [String] :created_from Retrieve entities from their creation date
  # @option opts [String] :modified_to Retrieve entities to their modification date
  # @option opts [String] :modified_from Retrieve entities from their modification date
  # @option opts [String] :tags Order tags
  # @option opts [String] :sort_by Set field to sort by
  # @option opts [String] :sort_direction Set sorting direction
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @option opts [Boolean] :enable_cache If the value is &#39;true&#39;, we will cache orders for a 15 minutes in order to increase speed and reduce requests throttling for some methods and shoping platforms (for example order.shipment.add)
  # @option opts [Boolean] :use_latest_api_version Use the latest platform API version
  # @option opts [Integer] :rounding_precision &lt;p&gt;Specifies the rounding precision for fractional numeric values (such as prices, taxes, and weights).&lt;/p&gt; &lt;p&gt;Supported values range from &lt;b&gt;1&lt;/b&gt; to &lt;b&gt;6&lt;/b&gt;.&lt;/p&gt; &lt;p&gt;The default rounding precision may vary depending on the platform. You can retrieve the default value using the &lt;strong&gt;cart.info&lt;/strong&gt; method in the &lt;code&gt;default_rounding_precision&lt;/code&gt; field. &lt;/p&gt;&lt;p&gt;Values are rounded to the nearest number at the specified precision. Fractions of .5 or higher are rounded up, while fractions lower than .5 are rounded down.&lt;/p&gt;
  # @return [ModelResponseOrderList]
  describe 'order_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_preestimate_shipping_list
  # order.preestimate_shipping.list
  # Retrieve list of order preestimated shipping methods
  # @param order_preestimate_shipping_list 
  # @param [Hash] opts the optional parameters
  # @return [ModelResponseOrderPreestimateShippingList]
  describe 'order_preestimate_shipping_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_refund_add
  # order.refund.add
  # Add a refund to the order.
  # @param order_refund_add 
  # @param [Hash] opts the optional parameters
  # @return [OrderRefundAdd200Response]
  describe 'order_refund_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_return_add
  # order.return.add
  # Create new return request.
  # @param order_return_add 
  # @param [Hash] opts the optional parameters
  # @return [OrderReturnAdd200Response]
  describe 'order_return_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_return_delete
  # order.return.delete
  # Delete return.
  # @param return_id Return ID
  # @param order_id Defines the order id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @return [AttributeValueDelete200Response]
  describe 'order_return_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_return_update
  # order.return.update
  # Update order&#39;s shipment information.
  # @param order_return_update 
  # @param [Hash] opts the optional parameters
  # @return [AccountConfigUpdate200Response]
  describe 'order_return_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_shipment_add
  # order.shipment.add
  # Add a shipment to the order.
  # @param order_shipment_add 
  # @param [Hash] opts the optional parameters
  # @return [OrderShipmentAdd200Response]
  describe 'order_shipment_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_shipment_add_batch
  # order.shipment.add.batch
  # Add a shipments to the orders.
  # @param order_shipment_add_batch 
  # @param [Hash] opts the optional parameters
  # @return [CategoryAddBatch200Response]
  describe 'order_shipment_add_batch test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_shipment_delete
  # order.shipment.delete
  # Delete order&#39;s shipment.
  # @param shipment_id Shipment id indicates the number of delivery
  # @param order_id Defines the order for which the shipment will be deleted
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @return [OrderShipmentDelete200Response]
  describe 'order_shipment_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_shipment_info
  # order.shipment.info
  # Get information of shipment.
  # @param id Entity id
  # @param order_id Defines the order id
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [String] :store_id Store Id
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [OrderShipmentInfo200Response]
  describe 'order_shipment_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_shipment_list
  # order.shipment.list
  # Get list of shipments per order.
  # @param order_id Retrieves shipments specified by order id
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :page_cursor Used to retrieve entities via cursor-based pagination (it can&#39;t be used with any other filtering parameter)
  # @option opts [String] :store_id Store Id
  # @option opts [String] :created_from Retrieve entities from their creation date
  # @option opts [String] :created_to Retrieve entities to their creation date
  # @option opts [String] :modified_from Retrieve entities from their modification date
  # @option opts [String] :modified_to Retrieve entities to their modification date
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [ModelResponseOrderShipmentList]
  describe 'order_shipment_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_shipment_tracking_add
  # order.shipment.tracking.add
  # Add order shipment&#39;s tracking info.
  # @param order_shipment_tracking_add 
  # @param [Hash] opts the optional parameters
  # @return [OrderShipmentTrackingAdd200Response]
  describe 'order_shipment_tracking_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_shipment_update
  # order.shipment.update
  # Update order&#39;s shipment information.
  # @param order_shipment_update 
  # @param [Hash] opts the optional parameters
  # @return [AccountConfigUpdate200Response]
  describe 'order_shipment_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_status_list
  # order.status.list
  # Retrieve list of statuses
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @option opts [String] :action Available statuses for the specified action.
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @return [ModelResponseOrderStatusList]
  describe 'order_status_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_transaction_list
  # order.transaction.list
  # Retrieve list of order transaction
  # @param order_ids Retrieves order transactions specified by order ids
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :page_cursor Used to retrieve entities via cursor-based pagination (it can&#39;t be used with any other filtering parameter)
  # @option opts [String] :store_id Store Id
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [ModelResponseOrderTransactionList]
  describe 'order_transaction_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for order_update
  # order.update
  # Update existing order.
  # @param order_id Defines the orders specified by order id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Defines store id where the order should be found
  # @option opts [String] :order_status Defines new order&#39;s status
  # @option opts [String] :financial_status Update order financial status to specified
  # @option opts [String] :fulfillment_status Create order with fulfillment status
  # @option opts [String] :cancellation_reason Defines the cancellation reason when the order will be canceled
  # @option opts [String] :order_payment_method Defines order payment method.&lt;br/&gt;Setting order_payment_method on Shopify will also change financial_status field value to &#39;paid&#39;
  # @option opts [String] :comment Specifies order comment
  # @option opts [String] :admin_comment Specifies admin&#39;s order comment
  # @option opts [String] :admin_private_comment Specifies private admin&#39;s order comment
  # @option opts [String] :invoice_admin_comment Specifies admin&#39;s order invoice comment
  # @option opts [String] :date_modified Specifies order&#39;s  modification date
  # @option opts [String] :date_finished Specifies order&#39;s  finished date
  # @option opts [Boolean] :send_notifications Send notifications to customer after order was created
  # @option opts [Boolean] :create_invoice Determines whether an invoice should be created if it has not already been created
  # @option opts [String] :origin The source of the order
  # @option opts [String] :tags Order tags
  # @return [AccountConfigUpdate200Response]
  describe 'order_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
