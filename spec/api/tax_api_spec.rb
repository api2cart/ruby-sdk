=begin
#API2Cart OpenAPI

#API2Cart

The version of the OpenAPI document: 1.1
Contact: contact@api2cart.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::TaxApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TaxApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::TaxApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TaxApi' do
    it 'should create an instance of TaxApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::TaxApi)
    end
  end

  # unit tests for tax_class_info
  # tax.class.info
  # Use this method to get information about a tax class and its rates. It allows you to calculate the tax percentage for a specific customer&#39;s address. This information contains relatively static data that rarely changes, so API2Cart may cache certain data to reduce the load on the store and speed up request execution. We also recommend that you cache the response of this method on your side to save requests. If you need to clear the cache for a specific store, use the cart.validate method.
  # @param tax_class_id Retrieves taxes specified by class id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @option opts [String] :lang_id Language id
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [ModelResponseTaxClassInfo]
  describe 'tax_class_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tax_class_list
  # tax.class.list
  # Get list of tax classes from your store.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :created_to Retrieve entities to their creation date
  # @option opts [String] :created_from Retrieve entities from their creation date
  # @option opts [String] :modified_to Retrieve entities to their modification date
  # @option opts [String] :modified_from Retrieve entities from their modification date
  # @option opts [String] :find_value Entity search that is specified by some value
  # @option opts [String] :find_where Tax class search that is specified by field
  # @option opts [String] :store_id Store Id
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :page_cursor Used to retrieve entities via cursor-based pagination (it can&#39;t be used with any other filtering parameter)
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @return [ModelResponseTaxClassList]
  describe 'tax_class_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
