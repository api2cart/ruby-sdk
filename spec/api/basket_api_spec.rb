=begin
#API2Cart OpenAPI

#API2Cart

The version of the OpenAPI document: 1.1
Contact: contact@api2cart.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::BasketApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BasketApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::BasketApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BasketApi' do
    it 'should create an instance of BasketApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::BasketApi)
    end
  end

  # unit tests for basket_info
  # basket.info
  # Retrieve basket information.
  # @param id Entity id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @return [BasketInfo200Response]
  describe 'basket_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for basket_item_add
  # basket.item.add
  # Add item to basket
  # @param customer_id Retrieves orders specified by customer id
  # @param product_id Defines id of the product which should be added to the basket
  # @param [Hash] opts the optional parameters
  # @option opts [String] :variant_id Defines product&#39;s variants specified by variant id
  # @option opts [Float] :quantity Defines new items quantity
  # @option opts [String] :store_id Store Id
  # @return [BasketItemAdd200Response]
  describe 'basket_item_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for basket_live_shipping_service_create
  # basket.live_shipping_service.create
  # Create live shipping rate service.
  # @param name Shipping Service Name
  # @param callback Callback url that returns shipping rates. It should be able to accept POST requests with json data.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @return [BasketLiveShippingServiceCreate200Response]
  describe 'basket_live_shipping_service_create test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for basket_live_shipping_service_delete
  # basket.live_shipping_service.delete
  # Delete live shipping rate service.
  # @param id Entity id
  # @param [Hash] opts the optional parameters
  # @return [BasketLiveShippingServiceDelete200Response]
  describe 'basket_live_shipping_service_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for basket_live_shipping_service_list
  # basket.live_shipping_service.list
  # Retrieve a list of live shipping rate services.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :store_id Store Id
  # @return [BasketLiveShippingServiceList200Response]
  describe 'basket_live_shipping_service_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
