=begin
#API2Cart OpenAPI

#API2Cart

The version of the OpenAPI document: 1.1
Contact: contact@api2cart.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::CategoryApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CategoryApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::CategoryApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CategoryApi' do
    it 'should create an instance of CategoryApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::CategoryApi)
    end
  end

  # unit tests for category_add
  # category.add
  # Add new category in store
  # @param name Defines category&#39;s name that has to be added
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description Defines category&#39;s description
  # @option opts [String] :short_description Defines short description
  # @option opts [String] :parent_id Adds categories specified by parent id
  # @option opts [Boolean] :avail Defines category&#39;s visibility status
  # @option opts [String] :created_time Entity&#39;s date creation
  # @option opts [String] :modified_time Entity&#39;s date modification
  # @option opts [Integer] :sort_order Sort number in the list
  # @option opts [String] :meta_title Defines unique meta title for each entity
  # @option opts [String] :meta_description Defines unique meta description of a entity
  # @option opts [String] :meta_keywords Defines unique meta keywords for each entity
  # @option opts [String] :seo_url Defines unique category&#39;s URL for SEO
  # @option opts [String] :store_id Store Id
  # @option opts [String] :stores_ids Create category in the stores that is specified by comma-separated stores&#39; id
  # @option opts [String] :lang_id Language id
  # @return [CategoryAdd200Response]
  describe 'category_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_add_batch
  # category.add.batch
  # Add new categories to the store.
  # @param category_add_batch 
  # @param [Hash] opts the optional parameters
  # @return [CategoryAddBatch200Response]
  describe 'category_add_batch test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_assign
  # category.assign
  # Assign category to product
  # @param category_id Defines category assign, specified by category id
  # @param product_id Defines category assign to the product, specified by product id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @return [CartConfigUpdate200Response]
  describe 'category_assign test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_count
  # category.count
  # Count categories in store.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :parent_id Counts categories specified by parent id
  # @option opts [String] :store_id Counts category specified by store id
  # @option opts [String] :lang_id Counts category specified by language id
  # @option opts [Boolean] :avail Defines category&#39;s visibility status
  # @option opts [String] :created_from Retrieve entities from their creation date
  # @option opts [String] :created_to Retrieve entities to their creation date
  # @option opts [String] :modified_from Retrieve entities from their modification date
  # @option opts [String] :modified_to Retrieve entities to their modification date
  # @option opts [String] :product_type A categorization for the product
  # @option opts [String] :find_value Entity search that is specified by some value
  # @option opts [String] :find_where Counts categories that are searched specified by field
  # @option opts [String] :report_request_id Report request id
  # @option opts [Boolean] :disable_report_cache Disable report cache for current request
  # @return [CategoryCount200Response]
  describe 'category_count test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_delete
  # category.delete
  # Delete category in store
  # @param id Defines category removal, specified by category id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @return [CategoryDelete200Response]
  describe 'category_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_find
  # category.find
  # Search category in store. \&quot;Laptop\&quot; is specified here by default.
  # @param find_value Entity search that is specified by some value
  # @param [Hash] opts the optional parameters
  # @option opts [String] :find_where Entity search that is specified by the comma-separated unique fields
  # @option opts [String] :find_params Entity search that is specified by comma-separated parameters
  # @option opts [String] :store_id Store Id
  # @option opts [String] :lang_id Language id
  # @return [CategoryFind200Response]
  describe 'category_find test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_image_add
  # category.image.add
  # Add image to category
  # @param category_id Defines category id where the image should be added
  # @param image_name Defines image&#39;s name
  # @param url Defines URL of the image that has to be added
  # @param type Defines image&#39;s types that are specified by comma-separated list
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @option opts [String] :label Defines alternative text that has to be attached to the picture
  # @option opts [String] :mime Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.
  # @option opts [Integer] :position Defines imageâ€™s position in the list
  # @return [CategoryImageAdd200Response]
  describe 'category_image_add test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_image_delete
  # category.image.delete
  # Delete image
  # @param category_id Defines category id where the image should be deleted
  # @param image_id Define image id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @return [AttributeDelete200Response]
  describe 'category_image_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_info
  # category.info
  # Get category info about category ID*** or specify other category ID.
  # @param id Retrieves category&#39;s info specified by category id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Retrieves category info  specified by store id
  # @option opts [String] :lang_id Retrieves category info  specified by language id
  # @option opts [String] :schema_type The name of the requirements set for the provided schema.
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @option opts [String] :report_request_id Report request id
  # @option opts [Boolean] :disable_report_cache Disable report cache for current request
  # @return [CategoryInfo200Response]
  describe 'category_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_list
  # category.list
  # Get list of categories from store.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start This parameter sets the number from which you want to get entities
  # @option opts [Integer] :count This parameter sets the entity amount that has to be retrieved. Max allowed count&#x3D;250
  # @option opts [String] :page_cursor Used to retrieve entities via cursor-based pagination (it can&#39;t be used with any other filtering parameter)
  # @option opts [String] :store_id Retrieves categories specified by store id
  # @option opts [String] :lang_id Retrieves categorys specified by language id
  # @option opts [String] :parent_id Retrieves categories specified by parent id
  # @option opts [Boolean] :avail Defines category&#39;s visibility status
  # @option opts [String] :product_type A categorization for the product
  # @option opts [String] :created_from Retrieve entities from their creation date
  # @option opts [String] :created_to Retrieve entities to their creation date
  # @option opts [String] :modified_from Retrieve entities from their modification date
  # @option opts [String] :modified_to Retrieve entities to their modification date
  # @option opts [String] :find_value Entity search that is specified by some value
  # @option opts [String] :find_where Category search that is specified by field
  # @option opts [String] :response_fields Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :params Set this parameter in order to choose which entity fields you want to retrieve
  # @option opts [String] :exclude Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
  # @option opts [String] :report_request_id Report request id
  # @option opts [Boolean] :disable_report_cache Disable report cache for current request
  # @option opts [Boolean] :disable_cache Disable cache for current request
  # @return [ModelResponseCategoryList]
  describe 'category_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_unassign
  # category.unassign
  # Unassign category to product
  # @param category_id Defines category unassign, specified by category id
  # @param product_id Defines category unassign to the product, specified by product id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id Store Id
  # @return [CartConfigUpdate200Response]
  describe 'category_unassign test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for category_update
  # category.update
  # Update category in store
  # @param id Defines category update specified by category id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Defines new categoryâ€™s name
  # @option opts [String] :description Defines new category&#39;s description
  # @option opts [String] :short_description Defines short description
  # @option opts [String] :parent_id Defines new parent category id
  # @option opts [Boolean] :avail Defines category&#39;s visibility status
  # @option opts [Integer] :sort_order Sort number in the list
  # @option opts [String] :modified_time Entity&#39;s date modification
  # @option opts [String] :meta_title Defines unique meta title for each entity
  # @option opts [String] :meta_description Defines unique meta description of a entity
  # @option opts [String] :meta_keywords Defines unique meta keywords for each entity
  # @option opts [String] :seo_url Defines unique category&#39;s URL for SEO
  # @option opts [String] :store_id Store Id
  # @option opts [String] :stores_ids Update category in the stores that is specified by comma-separated stores&#39; id
  # @option opts [String] :lang_id Language id
  # @return [AccountConfigUpdate200Response]
  describe 'category_update test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
