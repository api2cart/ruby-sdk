=begin
#API2Cart OpenAPI

#API2Cart

The version of the OpenAPI document: 1.1
Contact: contact@api2cart.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'date'
require 'time'

module OpenapiClient
  class AccountCartAdd
    # Storeâ€™s identifier which you can get from cart_list method
    attr_accessor :cart_id

    # A web address of a store that you would like to connect to API2Cart
    attr_accessor :store_url

    # This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)
    attr_accessor :bridge_url

    # Absolute path to the store root directory (used with \"bridge_url\" parameter)
    attr_accessor :store_root

    # Set this parameter if bridge is already uploaded to store
    attr_accessor :store_key

    # Specify if api2cart should validate cart version
    attr_accessor :validate_version

    # Enables or disables cart's verification
    attr_accessor :verify

    # DB tables prefix
    attr_accessor :db_tables_prefix

    # This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store's firewall may block specific values.
    attr_accessor :user_agent

    # FTP connection host
    attr_accessor :ftp_host

    # FTP User
    attr_accessor :ftp_user

    # FTP Password
    attr_accessor :ftp_password

    # FTP Port
    attr_accessor :ftp_port

    # FTP Store dir
    attr_accessor :ftp_store_dir

    # 3DCart Private Key
    attr_accessor :_3dcart_private_key

    # 3DCart Token
    attr_accessor :_3dcart_access_token

    # 3DCart API Key
    attr_accessor :_3dcartapi_api_key

    # Amazon SP API app client id
    attr_accessor :amazon_sp_client_id

    # Amazon SP API app client secret
    attr_accessor :amazon_sp_client_secret

    # Amazon SP API OAuth refresh token
    attr_accessor :amazon_sp_refresh_token

    # Amazon AWS Region
    attr_accessor :amazon_sp_aws_region

    # Amazon SP API environment
    attr_accessor :amazon_sp_api_environment

    # Amazon Seller ID (Merchant token)
    attr_accessor :amazon_seller_id

    # It's a AspDotNetStorefront account for which API is available
    attr_accessor :aspdotnetstorefront_api_user

    # AspDotNetStorefront API Password
    attr_accessor :aspdotnetstorefront_api_pass

    # It's a BigCommerce account for which API is enabled
    attr_accessor :bigcommerceapi_admin_account

    # BigCommerce API URL
    attr_accessor :bigcommerceapi_api_path

    # Bigcommerce API Key
    attr_accessor :bigcommerceapi_api_key

    # Client ID of the requesting app
    attr_accessor :bigcommerceapi_client_id

    # Access token authorizing the app to access resources on behalf of a user
    attr_accessor :bigcommerceapi_access_token

    # API Path section unique to the store
    attr_accessor :bigcommerceapi_context

    # Bol API Key
    attr_accessor :bol_api_key

    # Bol API Secret
    attr_accessor :bol_api_secret

    # Bol Retailer ID
    attr_accessor :bol_retailer_id

    # Subdomain of store
    attr_accessor :bigcartel_user_name

    # BigCartel account password
    attr_accessor :bigcartel_password

    # Bricklink Consumer Key
    attr_accessor :bricklink_consumer_key

    # Bricklink Consumer Secret
    attr_accessor :bricklink_consumer_secret

    # Bricklink Access Token
    attr_accessor :bricklink_token

    # Bricklink Access Token Secret
    attr_accessor :bricklink_token_secret

    # Demandware client id
    attr_accessor :demandware_client_id

    # Demandware api password
    attr_accessor :demandware_api_password

    # Demandware user name
    attr_accessor :demandware_user_name

    # Demandware user password
    attr_accessor :demandware_user_password

    # Application ID (AppID).
    attr_accessor :ebay_client_id

    # Shared Secret from eBay application
    attr_accessor :ebay_client_secret

    # The RuName value that eBay assigns to your application.
    attr_accessor :ebay_runame

    # Used to authenticate API requests.
    attr_accessor :ebay_access_token

    # Used to renew the access token.
    attr_accessor :ebay_refresh_token

    # eBay environment
    attr_accessor :ebay_environment

    # eBay global ID
    attr_accessor :ebay_site_id

    # Walmart client ID. For the region 'ca' use Consumer ID
    attr_accessor :walmart_client_id

    # Walmart client secret. For the region 'ca' use Private Key
    attr_accessor :walmart_client_secret

    # Walmart environment
    attr_accessor :walmart_environment

    # Walmart WM_CONSUMER.CHANNEL.TYPE header
    attr_accessor :walmart_channel_type

    # Walmart region
    attr_accessor :walmart_region

    # Access token authorizing the app to access resources on behalf of a user
    attr_accessor :ecwid_acess_token

    # Store Id
    attr_accessor :ecwid_store_id

    # Lazada App ID
    attr_accessor :lazada_app_id

    # Lazada App Secret
    attr_accessor :lazada_app_secret

    # Lazada Refresh Token
    attr_accessor :lazada_refresh_token

    # Lazada API endpoint Region
    attr_accessor :lazada_region

    # LightSpeed api key
    attr_accessor :lightspeed_api_key

    # LightSpeed api secret
    attr_accessor :lightspeed_api_secret

    # Etsy keystring
    attr_accessor :etsy_keystring

    # Etsy shared secret
    attr_accessor :etsy_shared_secret

    # Access token authorizing the app to access resources on behalf of a user
    attr_accessor :etsy_access_token

    # Secret token authorizing the app to access resources on behalf of a user
    attr_accessor :etsy_token_secret

    # Etsy Client Id
    attr_accessor :etsy_client_id

    # Etsy Refresh token
    attr_accessor :etsy_refresh_token

    # Facebook App ID
    attr_accessor :facebook_app_id

    # Facebook App Secret
    attr_accessor :facebook_app_secret

    # Facebook Access Token
    attr_accessor :facebook_access_token

    # Facebook Business ID
    attr_accessor :facebook_business_id

    # Neto API Key
    attr_accessor :neto_api_key

    # Neto User Name
    attr_accessor :neto_api_username

    # Shopline APP Key
    attr_accessor :shopline_access_token

    # Shopline APP Key
    attr_accessor :shopline_app_key

    # Shopline App Secret
    attr_accessor :shopline_app_secret

    # Shopline Shared Secret
    attr_accessor :shopline_shared_secret

    # Access token authorizing the app to access resources on behalf of a user
    attr_accessor :shopify_access_token

    # Shopify API Key
    attr_accessor :shopify_api_key

    # Shopify API Password
    attr_accessor :shopify_api_password

    # Shared secret
    attr_accessor :shopify_shared_secret

    # Shopee Partner ID
    attr_accessor :shopee_partner_id

    # Shopee Partner Key
    attr_accessor :shopee_partner_key

    # Shopee SHOP ID
    attr_accessor :shopee_shop_id

    # Shopee Refresh Token
    attr_accessor :shopee_refresh_token

    # Shopee API endpoint Region. Use for Chinese Mainland or Brazil.
    attr_accessor :shopee_region

    # Shopee Environment
    attr_accessor :shopee_environment

    # Access token authorizing the app to access resources on behalf of a user
    attr_accessor :shoplazza_access_token

    # Shared secret
    attr_accessor :shoplazza_shared_secret

    # Shopware access key
    attr_accessor :shopware_access_key

    # UNAS API Key
    attr_accessor :unas_api_key

    # Shopware api key
    attr_accessor :shopware_api_key

    # Shopware client secret access key
    attr_accessor :shopware_api_secret

    # Miva access token
    attr_accessor :miva_access_token

    # Miva signature
    attr_accessor :miva_signature

    # Tiendanube User ID
    attr_accessor :tiendanube_user_id

    # Tiendanube Access Token
    attr_accessor :tiendanube_access_token

    # Tiendanube Client Secret
    attr_accessor :tiendanube_client_secret

    # It's a Volusion account for which API is enabled
    attr_accessor :volusion_login

    # Volusion API Password
    attr_accessor :volusion_password

    # Omni Commerce Connector Client ID
    attr_accessor :hybris_client_id

    # Omni Commerce Connector Client Secret
    attr_accessor :hybris_client_secret

    # User Name
    attr_accessor :hybris_username

    # User password
    attr_accessor :hybris_password

    # Websites to stores mapping data
    attr_accessor :hybris_websites

    # Square (Weebly) Client ID
    attr_accessor :square_client_id

    # Square (Weebly) Client Secret
    attr_accessor :square_client_secret

    # Square (Weebly) Refresh Token
    attr_accessor :square_refresh_token

    # Squarespace API Key
    attr_accessor :squarespace_api_key

    # Squarespace Connector Client ID
    attr_accessor :squarespace_client_id

    # Squarespace Connector Client Secret
    attr_accessor :squarespace_client_secret

    # Squarespace access token
    attr_accessor :squarespace_access_token

    # Squarespace refresh token
    attr_accessor :squarespace_refresh_token

    # CommerceHQ api key
    attr_accessor :commercehq_api_key

    # CommerceHQ api password
    attr_accessor :commercehq_api_password

    # Woocommerce consumer key
    attr_accessor :wc_consumer_key

    # Woocommerce consumer secret
    attr_accessor :wc_consumer_secret

    # Magento Consumer Key
    attr_accessor :magento_consumer_key

    # Magento Consumer Secret
    attr_accessor :magento_consumer_secret

    # Magento Access Token
    attr_accessor :magento_access_token

    # Magento Token Secret
    attr_accessor :magento_token_secret

    # Prestashop webservice key
    attr_accessor :prestashop_webservice_key

    # Wix App ID
    attr_accessor :wix_app_id

    # Wix App Secret Key
    attr_accessor :wix_app_secret_key

    # Wix Instance ID
    attr_accessor :wix_instance_id

    # Wix refresh token
    attr_accessor :wix_refresh_token

    # Mercado Libre App ID
    attr_accessor :mercado_libre_app_id

    # Mercado Libre App Secret Key
    attr_accessor :mercado_libre_app_secret_key

    # Mercado Libre Refresh Token
    attr_accessor :mercado_libre_refresh_token

    # Zid Client ID
    attr_accessor :zid_client_id

    # Zid Client Secret
    attr_accessor :zid_client_secret

    # Zid Access Token
    attr_accessor :zid_access_token

    # Zid Authorization
    attr_accessor :zid_authorization

    # Zid refresh token
    attr_accessor :zid_refresh_token

    # Flipkart Client ID
    attr_accessor :flipkart_client_id

    # Flipkart Client Secret
    attr_accessor :flipkart_client_secret

    # Allegro Client ID
    attr_accessor :allegro_client_id

    # Allegro Client Secret
    attr_accessor :allegro_client_secret

    # Allegro Access Token
    attr_accessor :allegro_access_token

    # Allegro Refresh Token
    attr_accessor :allegro_refresh_token

    # Allegro Environment
    attr_accessor :allegro_environment

    # Zoho Client ID
    attr_accessor :zoho_client_id

    # Zoho Client Secret
    attr_accessor :zoho_client_secret

    # Zoho Refresh Token
    attr_accessor :zoho_refresh_token

    # Zoho API endpoint Region
    attr_accessor :zoho_region

    # Otto Client ID
    attr_accessor :otto_client_id

    # Otto Client Secret
    attr_accessor :otto_client_secret

    # Otto App ID
    attr_accessor :otto_app_id

    # Otto Refresh Token
    attr_accessor :otto_refresh_token

    # Otto Environment
    attr_accessor :otto_environment

    # Otto Access Token
    attr_accessor :otto_access_token

    # TikTok Shop App Key
    attr_accessor :tiktokshop_app_key

    # TikTok Shop App Secret
    attr_accessor :tiktokshop_app_secret

    # TikTok Shop Refresh Token
    attr_accessor :tiktokshop_refresh_token

    # TikTok Shop Access Token
    attr_accessor :tiktokshop_access_token

    # Salla Client ID
    attr_accessor :salla_client_id

    # Salla Client Secret
    attr_accessor :salla_client_secret

    # Salla Refresh Token
    attr_accessor :salla_refresh_token

    # Salla Access Token
    attr_accessor :salla_access_token

    # Temu App Key
    attr_accessor :temu_app_key

    # Temu App Secret
    attr_accessor :temu_app_secret

    # Temu Access Token
    attr_accessor :temu_access_token

    # Temu API endpoint Region.
    attr_accessor :temu_region

    class EnumAttributeValidator
      attr_reader :datatype
      attr_reader :allowable_values

      def initialize(datatype, allowable_values)
        @allowable_values = allowable_values.map do |value|
          case datatype.to_s
          when /Integer/i
            value.to_i
          when /Float/i
            value.to_f
          else
            value
          end
        end
      end

      def valid?(value)
        !value || allowable_values.include?(value)
      end
    end

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'cart_id' => :'cart_id',
        :'store_url' => :'store_url',
        :'bridge_url' => :'bridge_url',
        :'store_root' => :'store_root',
        :'store_key' => :'store_key',
        :'validate_version' => :'validate_version',
        :'verify' => :'verify',
        :'db_tables_prefix' => :'db_tables_prefix',
        :'user_agent' => :'user_agent',
        :'ftp_host' => :'ftp_host',
        :'ftp_user' => :'ftp_user',
        :'ftp_password' => :'ftp_password',
        :'ftp_port' => :'ftp_port',
        :'ftp_store_dir' => :'ftp_store_dir',
        :'_3dcart_private_key' => :'3dcart_private_key',
        :'_3dcart_access_token' => :'3dcart_access_token',
        :'_3dcartapi_api_key' => :'3dcartapi_api_key',
        :'amazon_sp_client_id' => :'amazon_sp_client_id',
        :'amazon_sp_client_secret' => :'amazon_sp_client_secret',
        :'amazon_sp_refresh_token' => :'amazon_sp_refresh_token',
        :'amazon_sp_aws_region' => :'amazon_sp_aws_region',
        :'amazon_sp_api_environment' => :'amazon_sp_api_environment',
        :'amazon_seller_id' => :'amazon_seller_id',
        :'aspdotnetstorefront_api_user' => :'aspdotnetstorefront_api_user',
        :'aspdotnetstorefront_api_pass' => :'aspdotnetstorefront_api_pass',
        :'bigcommerceapi_admin_account' => :'bigcommerceapi_admin_account',
        :'bigcommerceapi_api_path' => :'bigcommerceapi_api_path',
        :'bigcommerceapi_api_key' => :'bigcommerceapi_api_key',
        :'bigcommerceapi_client_id' => :'bigcommerceapi_client_id',
        :'bigcommerceapi_access_token' => :'bigcommerceapi_access_token',
        :'bigcommerceapi_context' => :'bigcommerceapi_context',
        :'bol_api_key' => :'bol_api_key',
        :'bol_api_secret' => :'bol_api_secret',
        :'bol_retailer_id' => :'bol_retailer_id',
        :'bigcartel_user_name' => :'bigcartel_user_name',
        :'bigcartel_password' => :'bigcartel_password',
        :'bricklink_consumer_key' => :'bricklink_consumer_key',
        :'bricklink_consumer_secret' => :'bricklink_consumer_secret',
        :'bricklink_token' => :'bricklink_token',
        :'bricklink_token_secret' => :'bricklink_token_secret',
        :'demandware_client_id' => :'demandware_client_id',
        :'demandware_api_password' => :'demandware_api_password',
        :'demandware_user_name' => :'demandware_user_name',
        :'demandware_user_password' => :'demandware_user_password',
        :'ebay_client_id' => :'ebay_client_id',
        :'ebay_client_secret' => :'ebay_client_secret',
        :'ebay_runame' => :'ebay_runame',
        :'ebay_access_token' => :'ebay_access_token',
        :'ebay_refresh_token' => :'ebay_refresh_token',
        :'ebay_environment' => :'ebay_environment',
        :'ebay_site_id' => :'ebay_site_id',
        :'walmart_client_id' => :'walmart_client_id',
        :'walmart_client_secret' => :'walmart_client_secret',
        :'walmart_environment' => :'walmart_environment',
        :'walmart_channel_type' => :'walmart_channel_type',
        :'walmart_region' => :'walmart_region',
        :'ecwid_acess_token' => :'ecwid_acess_token',
        :'ecwid_store_id' => :'ecwid_store_id',
        :'lazada_app_id' => :'lazada_app_id',
        :'lazada_app_secret' => :'lazada_app_secret',
        :'lazada_refresh_token' => :'lazada_refresh_token',
        :'lazada_region' => :'lazada_region',
        :'lightspeed_api_key' => :'lightspeed_api_key',
        :'lightspeed_api_secret' => :'lightspeed_api_secret',
        :'etsy_keystring' => :'etsy_keystring',
        :'etsy_shared_secret' => :'etsy_shared_secret',
        :'etsy_access_token' => :'etsy_access_token',
        :'etsy_token_secret' => :'etsy_token_secret',
        :'etsy_client_id' => :'etsy_client_id',
        :'etsy_refresh_token' => :'etsy_refresh_token',
        :'facebook_app_id' => :'facebook_app_id',
        :'facebook_app_secret' => :'facebook_app_secret',
        :'facebook_access_token' => :'facebook_access_token',
        :'facebook_business_id' => :'facebook_business_id',
        :'neto_api_key' => :'neto_api_key',
        :'neto_api_username' => :'neto_api_username',
        :'shopline_access_token' => :'shopline_access_token',
        :'shopline_app_key' => :'shopline_app_key',
        :'shopline_app_secret' => :'shopline_app_secret',
        :'shopline_shared_secret' => :'shopline_shared_secret',
        :'shopify_access_token' => :'shopify_access_token',
        :'shopify_api_key' => :'shopify_api_key',
        :'shopify_api_password' => :'shopify_api_password',
        :'shopify_shared_secret' => :'shopify_shared_secret',
        :'shopee_partner_id' => :'shopee_partner_id',
        :'shopee_partner_key' => :'shopee_partner_key',
        :'shopee_shop_id' => :'shopee_shop_id',
        :'shopee_refresh_token' => :'shopee_refresh_token',
        :'shopee_region' => :'shopee_region',
        :'shopee_environment' => :'shopee_environment',
        :'shoplazza_access_token' => :'shoplazza_access_token',
        :'shoplazza_shared_secret' => :'shoplazza_shared_secret',
        :'shopware_access_key' => :'shopware_access_key',
        :'unas_api_key' => :'unas_api_key',
        :'shopware_api_key' => :'shopware_api_key',
        :'shopware_api_secret' => :'shopware_api_secret',
        :'miva_access_token' => :'miva_access_token',
        :'miva_signature' => :'miva_signature',
        :'tiendanube_user_id' => :'tiendanube_user_id',
        :'tiendanube_access_token' => :'tiendanube_access_token',
        :'tiendanube_client_secret' => :'tiendanube_client_secret',
        :'volusion_login' => :'volusion_login',
        :'volusion_password' => :'volusion_password',
        :'hybris_client_id' => :'hybris_client_id',
        :'hybris_client_secret' => :'hybris_client_secret',
        :'hybris_username' => :'hybris_username',
        :'hybris_password' => :'hybris_password',
        :'hybris_websites' => :'hybris_websites',
        :'square_client_id' => :'square_client_id',
        :'square_client_secret' => :'square_client_secret',
        :'square_refresh_token' => :'square_refresh_token',
        :'squarespace_api_key' => :'squarespace_api_key',
        :'squarespace_client_id' => :'squarespace_client_id',
        :'squarespace_client_secret' => :'squarespace_client_secret',
        :'squarespace_access_token' => :'squarespace_access_token',
        :'squarespace_refresh_token' => :'squarespace_refresh_token',
        :'commercehq_api_key' => :'commercehq_api_key',
        :'commercehq_api_password' => :'commercehq_api_password',
        :'wc_consumer_key' => :'wc_consumer_key',
        :'wc_consumer_secret' => :'wc_consumer_secret',
        :'magento_consumer_key' => :'magento_consumer_key',
        :'magento_consumer_secret' => :'magento_consumer_secret',
        :'magento_access_token' => :'magento_access_token',
        :'magento_token_secret' => :'magento_token_secret',
        :'prestashop_webservice_key' => :'prestashop_webservice_key',
        :'wix_app_id' => :'wix_app_id',
        :'wix_app_secret_key' => :'wix_app_secret_key',
        :'wix_instance_id' => :'wix_instance_id',
        :'wix_refresh_token' => :'wix_refresh_token',
        :'mercado_libre_app_id' => :'mercado_libre_app_id',
        :'mercado_libre_app_secret_key' => :'mercado_libre_app_secret_key',
        :'mercado_libre_refresh_token' => :'mercado_libre_refresh_token',
        :'zid_client_id' => :'zid_client_id',
        :'zid_client_secret' => :'zid_client_secret',
        :'zid_access_token' => :'zid_access_token',
        :'zid_authorization' => :'zid_authorization',
        :'zid_refresh_token' => :'zid_refresh_token',
        :'flipkart_client_id' => :'flipkart_client_id',
        :'flipkart_client_secret' => :'flipkart_client_secret',
        :'allegro_client_id' => :'allegro_client_id',
        :'allegro_client_secret' => :'allegro_client_secret',
        :'allegro_access_token' => :'allegro_access_token',
        :'allegro_refresh_token' => :'allegro_refresh_token',
        :'allegro_environment' => :'allegro_environment',
        :'zoho_client_id' => :'zoho_client_id',
        :'zoho_client_secret' => :'zoho_client_secret',
        :'zoho_refresh_token' => :'zoho_refresh_token',
        :'zoho_region' => :'zoho_region',
        :'otto_client_id' => :'otto_client_id',
        :'otto_client_secret' => :'otto_client_secret',
        :'otto_app_id' => :'otto_app_id',
        :'otto_refresh_token' => :'otto_refresh_token',
        :'otto_environment' => :'otto_environment',
        :'otto_access_token' => :'otto_access_token',
        :'tiktokshop_app_key' => :'tiktokshop_app_key',
        :'tiktokshop_app_secret' => :'tiktokshop_app_secret',
        :'tiktokshop_refresh_token' => :'tiktokshop_refresh_token',
        :'tiktokshop_access_token' => :'tiktokshop_access_token',
        :'salla_client_id' => :'salla_client_id',
        :'salla_client_secret' => :'salla_client_secret',
        :'salla_refresh_token' => :'salla_refresh_token',
        :'salla_access_token' => :'salla_access_token',
        :'temu_app_key' => :'temu_app_key',
        :'temu_app_secret' => :'temu_app_secret',
        :'temu_access_token' => :'temu_access_token',
        :'temu_region' => :'temu_region'
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'cart_id' => :'String',
        :'store_url' => :'String',
        :'bridge_url' => :'String',
        :'store_root' => :'String',
        :'store_key' => :'String',
        :'validate_version' => :'Boolean',
        :'verify' => :'Boolean',
        :'db_tables_prefix' => :'String',
        :'user_agent' => :'String',
        :'ftp_host' => :'String',
        :'ftp_user' => :'String',
        :'ftp_password' => :'String',
        :'ftp_port' => :'Integer',
        :'ftp_store_dir' => :'String',
        :'_3dcart_private_key' => :'String',
        :'_3dcart_access_token' => :'String',
        :'_3dcartapi_api_key' => :'String',
        :'amazon_sp_client_id' => :'String',
        :'amazon_sp_client_secret' => :'String',
        :'amazon_sp_refresh_token' => :'String',
        :'amazon_sp_aws_region' => :'String',
        :'amazon_sp_api_environment' => :'String',
        :'amazon_seller_id' => :'String',
        :'aspdotnetstorefront_api_user' => :'String',
        :'aspdotnetstorefront_api_pass' => :'String',
        :'bigcommerceapi_admin_account' => :'String',
        :'bigcommerceapi_api_path' => :'String',
        :'bigcommerceapi_api_key' => :'String',
        :'bigcommerceapi_client_id' => :'String',
        :'bigcommerceapi_access_token' => :'String',
        :'bigcommerceapi_context' => :'String',
        :'bol_api_key' => :'String',
        :'bol_api_secret' => :'String',
        :'bol_retailer_id' => :'Integer',
        :'bigcartel_user_name' => :'String',
        :'bigcartel_password' => :'String',
        :'bricklink_consumer_key' => :'String',
        :'bricklink_consumer_secret' => :'String',
        :'bricklink_token' => :'String',
        :'bricklink_token_secret' => :'String',
        :'demandware_client_id' => :'String',
        :'demandware_api_password' => :'String',
        :'demandware_user_name' => :'String',
        :'demandware_user_password' => :'String',
        :'ebay_client_id' => :'String',
        :'ebay_client_secret' => :'String',
        :'ebay_runame' => :'String',
        :'ebay_access_token' => :'String',
        :'ebay_refresh_token' => :'String',
        :'ebay_environment' => :'String',
        :'ebay_site_id' => :'Integer',
        :'walmart_client_id' => :'String',
        :'walmart_client_secret' => :'String',
        :'walmart_environment' => :'String',
        :'walmart_channel_type' => :'String',
        :'walmart_region' => :'String',
        :'ecwid_acess_token' => :'String',
        :'ecwid_store_id' => :'String',
        :'lazada_app_id' => :'String',
        :'lazada_app_secret' => :'String',
        :'lazada_refresh_token' => :'String',
        :'lazada_region' => :'String',
        :'lightspeed_api_key' => :'String',
        :'lightspeed_api_secret' => :'String',
        :'etsy_keystring' => :'String',
        :'etsy_shared_secret' => :'String',
        :'etsy_access_token' => :'String',
        :'etsy_token_secret' => :'String',
        :'etsy_client_id' => :'String',
        :'etsy_refresh_token' => :'String',
        :'facebook_app_id' => :'String',
        :'facebook_app_secret' => :'String',
        :'facebook_access_token' => :'String',
        :'facebook_business_id' => :'String',
        :'neto_api_key' => :'String',
        :'neto_api_username' => :'String',
        :'shopline_access_token' => :'String',
        :'shopline_app_key' => :'String',
        :'shopline_app_secret' => :'String',
        :'shopline_shared_secret' => :'String',
        :'shopify_access_token' => :'String',
        :'shopify_api_key' => :'String',
        :'shopify_api_password' => :'String',
        :'shopify_shared_secret' => :'String',
        :'shopee_partner_id' => :'String',
        :'shopee_partner_key' => :'String',
        :'shopee_shop_id' => :'String',
        :'shopee_refresh_token' => :'String',
        :'shopee_region' => :'String',
        :'shopee_environment' => :'String',
        :'shoplazza_access_token' => :'String',
        :'shoplazza_shared_secret' => :'String',
        :'shopware_access_key' => :'String',
        :'unas_api_key' => :'String',
        :'shopware_api_key' => :'String',
        :'shopware_api_secret' => :'String',
        :'miva_access_token' => :'String',
        :'miva_signature' => :'String',
        :'tiendanube_user_id' => :'Integer',
        :'tiendanube_access_token' => :'String',
        :'tiendanube_client_secret' => :'String',
        :'volusion_login' => :'String',
        :'volusion_password' => :'String',
        :'hybris_client_id' => :'String',
        :'hybris_client_secret' => :'String',
        :'hybris_username' => :'String',
        :'hybris_password' => :'String',
        :'hybris_websites' => :'Array<AccountCartAddHybrisWebsitesInner>',
        :'square_client_id' => :'String',
        :'square_client_secret' => :'String',
        :'square_refresh_token' => :'String',
        :'squarespace_api_key' => :'String',
        :'squarespace_client_id' => :'String',
        :'squarespace_client_secret' => :'String',
        :'squarespace_access_token' => :'String',
        :'squarespace_refresh_token' => :'String',
        :'commercehq_api_key' => :'String',
        :'commercehq_api_password' => :'String',
        :'wc_consumer_key' => :'String',
        :'wc_consumer_secret' => :'String',
        :'magento_consumer_key' => :'String',
        :'magento_consumer_secret' => :'String',
        :'magento_access_token' => :'String',
        :'magento_token_secret' => :'String',
        :'prestashop_webservice_key' => :'String',
        :'wix_app_id' => :'String',
        :'wix_app_secret_key' => :'String',
        :'wix_instance_id' => :'String',
        :'wix_refresh_token' => :'String',
        :'mercado_libre_app_id' => :'String',
        :'mercado_libre_app_secret_key' => :'String',
        :'mercado_libre_refresh_token' => :'String',
        :'zid_client_id' => :'Integer',
        :'zid_client_secret' => :'String',
        :'zid_access_token' => :'String',
        :'zid_authorization' => :'String',
        :'zid_refresh_token' => :'String',
        :'flipkart_client_id' => :'String',
        :'flipkart_client_secret' => :'String',
        :'allegro_client_id' => :'String',
        :'allegro_client_secret' => :'String',
        :'allegro_access_token' => :'String',
        :'allegro_refresh_token' => :'String',
        :'allegro_environment' => :'String',
        :'zoho_client_id' => :'String',
        :'zoho_client_secret' => :'String',
        :'zoho_refresh_token' => :'String',
        :'zoho_region' => :'String',
        :'otto_client_id' => :'String',
        :'otto_client_secret' => :'String',
        :'otto_app_id' => :'String',
        :'otto_refresh_token' => :'String',
        :'otto_environment' => :'String',
        :'otto_access_token' => :'String',
        :'tiktokshop_app_key' => :'String',
        :'tiktokshop_app_secret' => :'String',
        :'tiktokshop_refresh_token' => :'String',
        :'tiktokshop_access_token' => :'String',
        :'salla_client_id' => :'String',
        :'salla_client_secret' => :'String',
        :'salla_refresh_token' => :'String',
        :'salla_access_token' => :'String',
        :'temu_app_key' => :'String',
        :'temu_app_secret' => :'String',
        :'temu_access_token' => :'String',
        :'temu_region' => :'String'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `OpenapiClient::AccountCartAdd` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `OpenapiClient::AccountCartAdd`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'cart_id')
        self.cart_id = attributes[:'cart_id']
      else
        self.cart_id = nil
      end

      if attributes.key?(:'store_url')
        self.store_url = attributes[:'store_url']
      end

      if attributes.key?(:'bridge_url')
        self.bridge_url = attributes[:'bridge_url']
      end

      if attributes.key?(:'store_root')
        self.store_root = attributes[:'store_root']
      end

      if attributes.key?(:'store_key')
        self.store_key = attributes[:'store_key']
      end

      if attributes.key?(:'validate_version')
        self.validate_version = attributes[:'validate_version']
      else
        self.validate_version = false
      end

      if attributes.key?(:'verify')
        self.verify = attributes[:'verify']
      else
        self.verify = true
      end

      if attributes.key?(:'db_tables_prefix')
        self.db_tables_prefix = attributes[:'db_tables_prefix']
      end

      if attributes.key?(:'user_agent')
        self.user_agent = attributes[:'user_agent']
      end

      if attributes.key?(:'ftp_host')
        self.ftp_host = attributes[:'ftp_host']
      end

      if attributes.key?(:'ftp_user')
        self.ftp_user = attributes[:'ftp_user']
      end

      if attributes.key?(:'ftp_password')
        self.ftp_password = attributes[:'ftp_password']
      end

      if attributes.key?(:'ftp_port')
        self.ftp_port = attributes[:'ftp_port']
      end

      if attributes.key?(:'ftp_store_dir')
        self.ftp_store_dir = attributes[:'ftp_store_dir']
      end

      if attributes.key?(:'_3dcart_private_key')
        self._3dcart_private_key = attributes[:'_3dcart_private_key']
      end

      if attributes.key?(:'_3dcart_access_token')
        self._3dcart_access_token = attributes[:'_3dcart_access_token']
      end

      if attributes.key?(:'_3dcartapi_api_key')
        self._3dcartapi_api_key = attributes[:'_3dcartapi_api_key']
      end

      if attributes.key?(:'amazon_sp_client_id')
        self.amazon_sp_client_id = attributes[:'amazon_sp_client_id']
      end

      if attributes.key?(:'amazon_sp_client_secret')
        self.amazon_sp_client_secret = attributes[:'amazon_sp_client_secret']
      end

      if attributes.key?(:'amazon_sp_refresh_token')
        self.amazon_sp_refresh_token = attributes[:'amazon_sp_refresh_token']
      end

      if attributes.key?(:'amazon_sp_aws_region')
        self.amazon_sp_aws_region = attributes[:'amazon_sp_aws_region']
      end

      if attributes.key?(:'amazon_sp_api_environment')
        self.amazon_sp_api_environment = attributes[:'amazon_sp_api_environment']
      else
        self.amazon_sp_api_environment = 'production'
      end

      if attributes.key?(:'amazon_seller_id')
        self.amazon_seller_id = attributes[:'amazon_seller_id']
      end

      if attributes.key?(:'aspdotnetstorefront_api_user')
        self.aspdotnetstorefront_api_user = attributes[:'aspdotnetstorefront_api_user']
      end

      if attributes.key?(:'aspdotnetstorefront_api_pass')
        self.aspdotnetstorefront_api_pass = attributes[:'aspdotnetstorefront_api_pass']
      end

      if attributes.key?(:'bigcommerceapi_admin_account')
        self.bigcommerceapi_admin_account = attributes[:'bigcommerceapi_admin_account']
      end

      if attributes.key?(:'bigcommerceapi_api_path')
        self.bigcommerceapi_api_path = attributes[:'bigcommerceapi_api_path']
      end

      if attributes.key?(:'bigcommerceapi_api_key')
        self.bigcommerceapi_api_key = attributes[:'bigcommerceapi_api_key']
      end

      if attributes.key?(:'bigcommerceapi_client_id')
        self.bigcommerceapi_client_id = attributes[:'bigcommerceapi_client_id']
      end

      if attributes.key?(:'bigcommerceapi_access_token')
        self.bigcommerceapi_access_token = attributes[:'bigcommerceapi_access_token']
      end

      if attributes.key?(:'bigcommerceapi_context')
        self.bigcommerceapi_context = attributes[:'bigcommerceapi_context']
      end

      if attributes.key?(:'bol_api_key')
        self.bol_api_key = attributes[:'bol_api_key']
      end

      if attributes.key?(:'bol_api_secret')
        self.bol_api_secret = attributes[:'bol_api_secret']
      end

      if attributes.key?(:'bol_retailer_id')
        self.bol_retailer_id = attributes[:'bol_retailer_id']
      end

      if attributes.key?(:'bigcartel_user_name')
        self.bigcartel_user_name = attributes[:'bigcartel_user_name']
      end

      if attributes.key?(:'bigcartel_password')
        self.bigcartel_password = attributes[:'bigcartel_password']
      end

      if attributes.key?(:'bricklink_consumer_key')
        self.bricklink_consumer_key = attributes[:'bricklink_consumer_key']
      end

      if attributes.key?(:'bricklink_consumer_secret')
        self.bricklink_consumer_secret = attributes[:'bricklink_consumer_secret']
      end

      if attributes.key?(:'bricklink_token')
        self.bricklink_token = attributes[:'bricklink_token']
      end

      if attributes.key?(:'bricklink_token_secret')
        self.bricklink_token_secret = attributes[:'bricklink_token_secret']
      end

      if attributes.key?(:'demandware_client_id')
        self.demandware_client_id = attributes[:'demandware_client_id']
      end

      if attributes.key?(:'demandware_api_password')
        self.demandware_api_password = attributes[:'demandware_api_password']
      end

      if attributes.key?(:'demandware_user_name')
        self.demandware_user_name = attributes[:'demandware_user_name']
      end

      if attributes.key?(:'demandware_user_password')
        self.demandware_user_password = attributes[:'demandware_user_password']
      end

      if attributes.key?(:'ebay_client_id')
        self.ebay_client_id = attributes[:'ebay_client_id']
      end

      if attributes.key?(:'ebay_client_secret')
        self.ebay_client_secret = attributes[:'ebay_client_secret']
      end

      if attributes.key?(:'ebay_runame')
        self.ebay_runame = attributes[:'ebay_runame']
      end

      if attributes.key?(:'ebay_access_token')
        self.ebay_access_token = attributes[:'ebay_access_token']
      end

      if attributes.key?(:'ebay_refresh_token')
        self.ebay_refresh_token = attributes[:'ebay_refresh_token']
      end

      if attributes.key?(:'ebay_environment')
        self.ebay_environment = attributes[:'ebay_environment']
      else
        self.ebay_environment = 'production'
      end

      if attributes.key?(:'ebay_site_id')
        self.ebay_site_id = attributes[:'ebay_site_id']
      else
        self.ebay_site_id = 0
      end

      if attributes.key?(:'walmart_client_id')
        self.walmart_client_id = attributes[:'walmart_client_id']
      end

      if attributes.key?(:'walmart_client_secret')
        self.walmart_client_secret = attributes[:'walmart_client_secret']
      end

      if attributes.key?(:'walmart_environment')
        self.walmart_environment = attributes[:'walmart_environment']
      else
        self.walmart_environment = 'production'
      end

      if attributes.key?(:'walmart_channel_type')
        self.walmart_channel_type = attributes[:'walmart_channel_type']
      end

      if attributes.key?(:'walmart_region')
        self.walmart_region = attributes[:'walmart_region']
      else
        self.walmart_region = 'us'
      end

      if attributes.key?(:'ecwid_acess_token')
        self.ecwid_acess_token = attributes[:'ecwid_acess_token']
      end

      if attributes.key?(:'ecwid_store_id')
        self.ecwid_store_id = attributes[:'ecwid_store_id']
      end

      if attributes.key?(:'lazada_app_id')
        self.lazada_app_id = attributes[:'lazada_app_id']
      end

      if attributes.key?(:'lazada_app_secret')
        self.lazada_app_secret = attributes[:'lazada_app_secret']
      end

      if attributes.key?(:'lazada_refresh_token')
        self.lazada_refresh_token = attributes[:'lazada_refresh_token']
      end

      if attributes.key?(:'lazada_region')
        self.lazada_region = attributes[:'lazada_region']
      end

      if attributes.key?(:'lightspeed_api_key')
        self.lightspeed_api_key = attributes[:'lightspeed_api_key']
      end

      if attributes.key?(:'lightspeed_api_secret')
        self.lightspeed_api_secret = attributes[:'lightspeed_api_secret']
      end

      if attributes.key?(:'etsy_keystring')
        self.etsy_keystring = attributes[:'etsy_keystring']
      end

      if attributes.key?(:'etsy_shared_secret')
        self.etsy_shared_secret = attributes[:'etsy_shared_secret']
      end

      if attributes.key?(:'etsy_access_token')
        self.etsy_access_token = attributes[:'etsy_access_token']
      end

      if attributes.key?(:'etsy_token_secret')
        self.etsy_token_secret = attributes[:'etsy_token_secret']
      end

      if attributes.key?(:'etsy_client_id')
        self.etsy_client_id = attributes[:'etsy_client_id']
      end

      if attributes.key?(:'etsy_refresh_token')
        self.etsy_refresh_token = attributes[:'etsy_refresh_token']
      end

      if attributes.key?(:'facebook_app_id')
        self.facebook_app_id = attributes[:'facebook_app_id']
      end

      if attributes.key?(:'facebook_app_secret')
        self.facebook_app_secret = attributes[:'facebook_app_secret']
      end

      if attributes.key?(:'facebook_access_token')
        self.facebook_access_token = attributes[:'facebook_access_token']
      end

      if attributes.key?(:'facebook_business_id')
        self.facebook_business_id = attributes[:'facebook_business_id']
      end

      if attributes.key?(:'neto_api_key')
        self.neto_api_key = attributes[:'neto_api_key']
      end

      if attributes.key?(:'neto_api_username')
        self.neto_api_username = attributes[:'neto_api_username']
      end

      if attributes.key?(:'shopline_access_token')
        self.shopline_access_token = attributes[:'shopline_access_token']
      end

      if attributes.key?(:'shopline_app_key')
        self.shopline_app_key = attributes[:'shopline_app_key']
      end

      if attributes.key?(:'shopline_app_secret')
        self.shopline_app_secret = attributes[:'shopline_app_secret']
      end

      if attributes.key?(:'shopline_shared_secret')
        self.shopline_shared_secret = attributes[:'shopline_shared_secret']
      end

      if attributes.key?(:'shopify_access_token')
        self.shopify_access_token = attributes[:'shopify_access_token']
      end

      if attributes.key?(:'shopify_api_key')
        self.shopify_api_key = attributes[:'shopify_api_key']
      end

      if attributes.key?(:'shopify_api_password')
        self.shopify_api_password = attributes[:'shopify_api_password']
      end

      if attributes.key?(:'shopify_shared_secret')
        self.shopify_shared_secret = attributes[:'shopify_shared_secret']
      end

      if attributes.key?(:'shopee_partner_id')
        self.shopee_partner_id = attributes[:'shopee_partner_id']
      end

      if attributes.key?(:'shopee_partner_key')
        self.shopee_partner_key = attributes[:'shopee_partner_key']
      end

      if attributes.key?(:'shopee_shop_id')
        self.shopee_shop_id = attributes[:'shopee_shop_id']
      end

      if attributes.key?(:'shopee_refresh_token')
        self.shopee_refresh_token = attributes[:'shopee_refresh_token']
      end

      if attributes.key?(:'shopee_region')
        self.shopee_region = attributes[:'shopee_region']
      end

      if attributes.key?(:'shopee_environment')
        self.shopee_environment = attributes[:'shopee_environment']
      else
        self.shopee_environment = 'production'
      end

      if attributes.key?(:'shoplazza_access_token')
        self.shoplazza_access_token = attributes[:'shoplazza_access_token']
      end

      if attributes.key?(:'shoplazza_shared_secret')
        self.shoplazza_shared_secret = attributes[:'shoplazza_shared_secret']
      end

      if attributes.key?(:'shopware_access_key')
        self.shopware_access_key = attributes[:'shopware_access_key']
      end

      if attributes.key?(:'unas_api_key')
        self.unas_api_key = attributes[:'unas_api_key']
      end

      if attributes.key?(:'shopware_api_key')
        self.shopware_api_key = attributes[:'shopware_api_key']
      end

      if attributes.key?(:'shopware_api_secret')
        self.shopware_api_secret = attributes[:'shopware_api_secret']
      end

      if attributes.key?(:'miva_access_token')
        self.miva_access_token = attributes[:'miva_access_token']
      end

      if attributes.key?(:'miva_signature')
        self.miva_signature = attributes[:'miva_signature']
      end

      if attributes.key?(:'tiendanube_user_id')
        self.tiendanube_user_id = attributes[:'tiendanube_user_id']
      end

      if attributes.key?(:'tiendanube_access_token')
        self.tiendanube_access_token = attributes[:'tiendanube_access_token']
      end

      if attributes.key?(:'tiendanube_client_secret')
        self.tiendanube_client_secret = attributes[:'tiendanube_client_secret']
      end

      if attributes.key?(:'volusion_login')
        self.volusion_login = attributes[:'volusion_login']
      end

      if attributes.key?(:'volusion_password')
        self.volusion_password = attributes[:'volusion_password']
      end

      if attributes.key?(:'hybris_client_id')
        self.hybris_client_id = attributes[:'hybris_client_id']
      end

      if attributes.key?(:'hybris_client_secret')
        self.hybris_client_secret = attributes[:'hybris_client_secret']
      end

      if attributes.key?(:'hybris_username')
        self.hybris_username = attributes[:'hybris_username']
      end

      if attributes.key?(:'hybris_password')
        self.hybris_password = attributes[:'hybris_password']
      end

      if attributes.key?(:'hybris_websites')
        if (value = attributes[:'hybris_websites']).is_a?(Array)
          self.hybris_websites = value
        end
      end

      if attributes.key?(:'square_client_id')
        self.square_client_id = attributes[:'square_client_id']
      end

      if attributes.key?(:'square_client_secret')
        self.square_client_secret = attributes[:'square_client_secret']
      end

      if attributes.key?(:'square_refresh_token')
        self.square_refresh_token = attributes[:'square_refresh_token']
      end

      if attributes.key?(:'squarespace_api_key')
        self.squarespace_api_key = attributes[:'squarespace_api_key']
      end

      if attributes.key?(:'squarespace_client_id')
        self.squarespace_client_id = attributes[:'squarespace_client_id']
      end

      if attributes.key?(:'squarespace_client_secret')
        self.squarespace_client_secret = attributes[:'squarespace_client_secret']
      end

      if attributes.key?(:'squarespace_access_token')
        self.squarespace_access_token = attributes[:'squarespace_access_token']
      end

      if attributes.key?(:'squarespace_refresh_token')
        self.squarespace_refresh_token = attributes[:'squarespace_refresh_token']
      end

      if attributes.key?(:'commercehq_api_key')
        self.commercehq_api_key = attributes[:'commercehq_api_key']
      end

      if attributes.key?(:'commercehq_api_password')
        self.commercehq_api_password = attributes[:'commercehq_api_password']
      end

      if attributes.key?(:'wc_consumer_key')
        self.wc_consumer_key = attributes[:'wc_consumer_key']
      end

      if attributes.key?(:'wc_consumer_secret')
        self.wc_consumer_secret = attributes[:'wc_consumer_secret']
      end

      if attributes.key?(:'magento_consumer_key')
        self.magento_consumer_key = attributes[:'magento_consumer_key']
      end

      if attributes.key?(:'magento_consumer_secret')
        self.magento_consumer_secret = attributes[:'magento_consumer_secret']
      end

      if attributes.key?(:'magento_access_token')
        self.magento_access_token = attributes[:'magento_access_token']
      end

      if attributes.key?(:'magento_token_secret')
        self.magento_token_secret = attributes[:'magento_token_secret']
      end

      if attributes.key?(:'prestashop_webservice_key')
        self.prestashop_webservice_key = attributes[:'prestashop_webservice_key']
      end

      if attributes.key?(:'wix_app_id')
        self.wix_app_id = attributes[:'wix_app_id']
      end

      if attributes.key?(:'wix_app_secret_key')
        self.wix_app_secret_key = attributes[:'wix_app_secret_key']
      end

      if attributes.key?(:'wix_instance_id')
        self.wix_instance_id = attributes[:'wix_instance_id']
      end

      if attributes.key?(:'wix_refresh_token')
        self.wix_refresh_token = attributes[:'wix_refresh_token']
      end

      if attributes.key?(:'mercado_libre_app_id')
        self.mercado_libre_app_id = attributes[:'mercado_libre_app_id']
      end

      if attributes.key?(:'mercado_libre_app_secret_key')
        self.mercado_libre_app_secret_key = attributes[:'mercado_libre_app_secret_key']
      end

      if attributes.key?(:'mercado_libre_refresh_token')
        self.mercado_libre_refresh_token = attributes[:'mercado_libre_refresh_token']
      end

      if attributes.key?(:'zid_client_id')
        self.zid_client_id = attributes[:'zid_client_id']
      end

      if attributes.key?(:'zid_client_secret')
        self.zid_client_secret = attributes[:'zid_client_secret']
      end

      if attributes.key?(:'zid_access_token')
        self.zid_access_token = attributes[:'zid_access_token']
      end

      if attributes.key?(:'zid_authorization')
        self.zid_authorization = attributes[:'zid_authorization']
      end

      if attributes.key?(:'zid_refresh_token')
        self.zid_refresh_token = attributes[:'zid_refresh_token']
      end

      if attributes.key?(:'flipkart_client_id')
        self.flipkart_client_id = attributes[:'flipkart_client_id']
      end

      if attributes.key?(:'flipkart_client_secret')
        self.flipkart_client_secret = attributes[:'flipkart_client_secret']
      end

      if attributes.key?(:'allegro_client_id')
        self.allegro_client_id = attributes[:'allegro_client_id']
      end

      if attributes.key?(:'allegro_client_secret')
        self.allegro_client_secret = attributes[:'allegro_client_secret']
      end

      if attributes.key?(:'allegro_access_token')
        self.allegro_access_token = attributes[:'allegro_access_token']
      end

      if attributes.key?(:'allegro_refresh_token')
        self.allegro_refresh_token = attributes[:'allegro_refresh_token']
      end

      if attributes.key?(:'allegro_environment')
        self.allegro_environment = attributes[:'allegro_environment']
      else
        self.allegro_environment = 'production'
      end

      if attributes.key?(:'zoho_client_id')
        self.zoho_client_id = attributes[:'zoho_client_id']
      end

      if attributes.key?(:'zoho_client_secret')
        self.zoho_client_secret = attributes[:'zoho_client_secret']
      end

      if attributes.key?(:'zoho_refresh_token')
        self.zoho_refresh_token = attributes[:'zoho_refresh_token']
      end

      if attributes.key?(:'zoho_region')
        self.zoho_region = attributes[:'zoho_region']
      end

      if attributes.key?(:'otto_client_id')
        self.otto_client_id = attributes[:'otto_client_id']
      end

      if attributes.key?(:'otto_client_secret')
        self.otto_client_secret = attributes[:'otto_client_secret']
      end

      if attributes.key?(:'otto_app_id')
        self.otto_app_id = attributes[:'otto_app_id']
      end

      if attributes.key?(:'otto_refresh_token')
        self.otto_refresh_token = attributes[:'otto_refresh_token']
      end

      if attributes.key?(:'otto_environment')
        self.otto_environment = attributes[:'otto_environment']
      else
        self.otto_environment = 'production'
      end

      if attributes.key?(:'otto_access_token')
        self.otto_access_token = attributes[:'otto_access_token']
      end

      if attributes.key?(:'tiktokshop_app_key')
        self.tiktokshop_app_key = attributes[:'tiktokshop_app_key']
      end

      if attributes.key?(:'tiktokshop_app_secret')
        self.tiktokshop_app_secret = attributes[:'tiktokshop_app_secret']
      end

      if attributes.key?(:'tiktokshop_refresh_token')
        self.tiktokshop_refresh_token = attributes[:'tiktokshop_refresh_token']
      end

      if attributes.key?(:'tiktokshop_access_token')
        self.tiktokshop_access_token = attributes[:'tiktokshop_access_token']
      end

      if attributes.key?(:'salla_client_id')
        self.salla_client_id = attributes[:'salla_client_id']
      end

      if attributes.key?(:'salla_client_secret')
        self.salla_client_secret = attributes[:'salla_client_secret']
      end

      if attributes.key?(:'salla_refresh_token')
        self.salla_refresh_token = attributes[:'salla_refresh_token']
      end

      if attributes.key?(:'salla_access_token')
        self.salla_access_token = attributes[:'salla_access_token']
      end

      if attributes.key?(:'temu_app_key')
        self.temu_app_key = attributes[:'temu_app_key']
      end

      if attributes.key?(:'temu_app_secret')
        self.temu_app_secret = attributes[:'temu_app_secret']
      end

      if attributes.key?(:'temu_access_token')
        self.temu_access_token = attributes[:'temu_access_token']
      end

      if attributes.key?(:'temu_region')
        self.temu_region = attributes[:'temu_region']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      warn '[DEPRECATED] the `list_invalid_properties` method is obsolete'
      invalid_properties = Array.new
      if @cart_id.nil?
        invalid_properties.push('invalid value for "cart_id", cart_id cannot be nil.')
      end

      if !@hybris_websites.nil? && @hybris_websites.length < 1
        invalid_properties.push('invalid value for "hybris_websites", number of items must be greater than or equal to 1.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      warn '[DEPRECATED] the `valid?` method is obsolete'
      return false if @cart_id.nil?
      cart_id_validator = EnumAttributeValidator.new('String', ["3DCart", "3DCartApi", "AceShop", "AmazonSP", "AspDotNetStorefront", "BigCartel", "Bricklink", "BigcommerceApi", "Bol", "CommerceHQ", "Creloaded", "Cscart", "Cubecart", "Demandware", "EBay", "Ecwid", "EtsyAPIv3", "Facebook", "Flipkart", "Gambio", "Hybris", "JooCart", "Lazada", "LightSpeed", "Magento1212", "Magento2Api", "MercadoLibre", "MijoShop", "Miva", "Neto", "Opencart14", "Oscmax2", "Oscommerce22ms2", "Otto", "Oxid", "Pinnacle", "Prestashop", "PrestashopApi", "SSPremium", "Salla", "Shopify", "Shopee", "Shoplazza", "Shopline", "Shopware", "ShopwareApi", "Square", "Squarespace", "Temu", "Tiendanube", "TikTokShop", "Tomatocart", "Ubercart", "Virtuemart", "Volusion", "WPecommerce", "Walmart", "WebAsyst", "Wix", "Woocommerce", "WoocommerceApi", "Xcart", "Xtcommerce", "XtcommerceVeyton", "Zencart137", "Zid", "Zoey", "Zoho"])
      return false unless cart_id_validator.valid?(@cart_id)
      return false if !@hybris_websites.nil? && @hybris_websites.length < 1
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] cart_id Object to be assigned
    def cart_id=(cart_id)
      validator = EnumAttributeValidator.new('String', ["3DCart", "3DCartApi", "AceShop", "AmazonSP", "AspDotNetStorefront", "BigCartel", "Bricklink", "BigcommerceApi", "Bol", "CommerceHQ", "Creloaded", "Cscart", "Cubecart", "Demandware", "EBay", "Ecwid", "EtsyAPIv3", "Facebook", "Flipkart", "Gambio", "Hybris", "JooCart", "Lazada", "LightSpeed", "Magento1212", "Magento2Api", "MercadoLibre", "MijoShop", "Miva", "Neto", "Opencart14", "Oscmax2", "Oscommerce22ms2", "Otto", "Oxid", "Pinnacle", "Prestashop", "PrestashopApi", "SSPremium", "Salla", "Shopify", "Shopee", "Shoplazza", "Shopline", "Shopware", "ShopwareApi", "Square", "Squarespace", "Temu", "Tiendanube", "TikTokShop", "Tomatocart", "Ubercart", "Virtuemart", "Volusion", "WPecommerce", "Walmart", "WebAsyst", "Wix", "Woocommerce", "WoocommerceApi", "Xcart", "Xtcommerce", "XtcommerceVeyton", "Zencart137", "Zid", "Zoey", "Zoho"])
      unless validator.valid?(cart_id)
        fail ArgumentError, "invalid value for \"cart_id\", must be one of #{validator.allowable_values}."
      end
      @cart_id = cart_id
    end

    # Custom attribute writer method with validation
    # @param [Object] hybris_websites Value to be assigned
    def hybris_websites=(hybris_websites)
      if hybris_websites.nil?
        fail ArgumentError, 'hybris_websites cannot be nil'
      end

      if hybris_websites.length < 1
        fail ArgumentError, 'invalid value for "hybris_websites", number of items must be greater than or equal to 1.'
      end

      @hybris_websites = hybris_websites
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          cart_id == o.cart_id &&
          store_url == o.store_url &&
          bridge_url == o.bridge_url &&
          store_root == o.store_root &&
          store_key == o.store_key &&
          validate_version == o.validate_version &&
          verify == o.verify &&
          db_tables_prefix == o.db_tables_prefix &&
          user_agent == o.user_agent &&
          ftp_host == o.ftp_host &&
          ftp_user == o.ftp_user &&
          ftp_password == o.ftp_password &&
          ftp_port == o.ftp_port &&
          ftp_store_dir == o.ftp_store_dir &&
          _3dcart_private_key == o._3dcart_private_key &&
          _3dcart_access_token == o._3dcart_access_token &&
          _3dcartapi_api_key == o._3dcartapi_api_key &&
          amazon_sp_client_id == o.amazon_sp_client_id &&
          amazon_sp_client_secret == o.amazon_sp_client_secret &&
          amazon_sp_refresh_token == o.amazon_sp_refresh_token &&
          amazon_sp_aws_region == o.amazon_sp_aws_region &&
          amazon_sp_api_environment == o.amazon_sp_api_environment &&
          amazon_seller_id == o.amazon_seller_id &&
          aspdotnetstorefront_api_user == o.aspdotnetstorefront_api_user &&
          aspdotnetstorefront_api_pass == o.aspdotnetstorefront_api_pass &&
          bigcommerceapi_admin_account == o.bigcommerceapi_admin_account &&
          bigcommerceapi_api_path == o.bigcommerceapi_api_path &&
          bigcommerceapi_api_key == o.bigcommerceapi_api_key &&
          bigcommerceapi_client_id == o.bigcommerceapi_client_id &&
          bigcommerceapi_access_token == o.bigcommerceapi_access_token &&
          bigcommerceapi_context == o.bigcommerceapi_context &&
          bol_api_key == o.bol_api_key &&
          bol_api_secret == o.bol_api_secret &&
          bol_retailer_id == o.bol_retailer_id &&
          bigcartel_user_name == o.bigcartel_user_name &&
          bigcartel_password == o.bigcartel_password &&
          bricklink_consumer_key == o.bricklink_consumer_key &&
          bricklink_consumer_secret == o.bricklink_consumer_secret &&
          bricklink_token == o.bricklink_token &&
          bricklink_token_secret == o.bricklink_token_secret &&
          demandware_client_id == o.demandware_client_id &&
          demandware_api_password == o.demandware_api_password &&
          demandware_user_name == o.demandware_user_name &&
          demandware_user_password == o.demandware_user_password &&
          ebay_client_id == o.ebay_client_id &&
          ebay_client_secret == o.ebay_client_secret &&
          ebay_runame == o.ebay_runame &&
          ebay_access_token == o.ebay_access_token &&
          ebay_refresh_token == o.ebay_refresh_token &&
          ebay_environment == o.ebay_environment &&
          ebay_site_id == o.ebay_site_id &&
          walmart_client_id == o.walmart_client_id &&
          walmart_client_secret == o.walmart_client_secret &&
          walmart_environment == o.walmart_environment &&
          walmart_channel_type == o.walmart_channel_type &&
          walmart_region == o.walmart_region &&
          ecwid_acess_token == o.ecwid_acess_token &&
          ecwid_store_id == o.ecwid_store_id &&
          lazada_app_id == o.lazada_app_id &&
          lazada_app_secret == o.lazada_app_secret &&
          lazada_refresh_token == o.lazada_refresh_token &&
          lazada_region == o.lazada_region &&
          lightspeed_api_key == o.lightspeed_api_key &&
          lightspeed_api_secret == o.lightspeed_api_secret &&
          etsy_keystring == o.etsy_keystring &&
          etsy_shared_secret == o.etsy_shared_secret &&
          etsy_access_token == o.etsy_access_token &&
          etsy_token_secret == o.etsy_token_secret &&
          etsy_client_id == o.etsy_client_id &&
          etsy_refresh_token == o.etsy_refresh_token &&
          facebook_app_id == o.facebook_app_id &&
          facebook_app_secret == o.facebook_app_secret &&
          facebook_access_token == o.facebook_access_token &&
          facebook_business_id == o.facebook_business_id &&
          neto_api_key == o.neto_api_key &&
          neto_api_username == o.neto_api_username &&
          shopline_access_token == o.shopline_access_token &&
          shopline_app_key == o.shopline_app_key &&
          shopline_app_secret == o.shopline_app_secret &&
          shopline_shared_secret == o.shopline_shared_secret &&
          shopify_access_token == o.shopify_access_token &&
          shopify_api_key == o.shopify_api_key &&
          shopify_api_password == o.shopify_api_password &&
          shopify_shared_secret == o.shopify_shared_secret &&
          shopee_partner_id == o.shopee_partner_id &&
          shopee_partner_key == o.shopee_partner_key &&
          shopee_shop_id == o.shopee_shop_id &&
          shopee_refresh_token == o.shopee_refresh_token &&
          shopee_region == o.shopee_region &&
          shopee_environment == o.shopee_environment &&
          shoplazza_access_token == o.shoplazza_access_token &&
          shoplazza_shared_secret == o.shoplazza_shared_secret &&
          shopware_access_key == o.shopware_access_key &&
          unas_api_key == o.unas_api_key &&
          shopware_api_key == o.shopware_api_key &&
          shopware_api_secret == o.shopware_api_secret &&
          miva_access_token == o.miva_access_token &&
          miva_signature == o.miva_signature &&
          tiendanube_user_id == o.tiendanube_user_id &&
          tiendanube_access_token == o.tiendanube_access_token &&
          tiendanube_client_secret == o.tiendanube_client_secret &&
          volusion_login == o.volusion_login &&
          volusion_password == o.volusion_password &&
          hybris_client_id == o.hybris_client_id &&
          hybris_client_secret == o.hybris_client_secret &&
          hybris_username == o.hybris_username &&
          hybris_password == o.hybris_password &&
          hybris_websites == o.hybris_websites &&
          square_client_id == o.square_client_id &&
          square_client_secret == o.square_client_secret &&
          square_refresh_token == o.square_refresh_token &&
          squarespace_api_key == o.squarespace_api_key &&
          squarespace_client_id == o.squarespace_client_id &&
          squarespace_client_secret == o.squarespace_client_secret &&
          squarespace_access_token == o.squarespace_access_token &&
          squarespace_refresh_token == o.squarespace_refresh_token &&
          commercehq_api_key == o.commercehq_api_key &&
          commercehq_api_password == o.commercehq_api_password &&
          wc_consumer_key == o.wc_consumer_key &&
          wc_consumer_secret == o.wc_consumer_secret &&
          magento_consumer_key == o.magento_consumer_key &&
          magento_consumer_secret == o.magento_consumer_secret &&
          magento_access_token == o.magento_access_token &&
          magento_token_secret == o.magento_token_secret &&
          prestashop_webservice_key == o.prestashop_webservice_key &&
          wix_app_id == o.wix_app_id &&
          wix_app_secret_key == o.wix_app_secret_key &&
          wix_instance_id == o.wix_instance_id &&
          wix_refresh_token == o.wix_refresh_token &&
          mercado_libre_app_id == o.mercado_libre_app_id &&
          mercado_libre_app_secret_key == o.mercado_libre_app_secret_key &&
          mercado_libre_refresh_token == o.mercado_libre_refresh_token &&
          zid_client_id == o.zid_client_id &&
          zid_client_secret == o.zid_client_secret &&
          zid_access_token == o.zid_access_token &&
          zid_authorization == o.zid_authorization &&
          zid_refresh_token == o.zid_refresh_token &&
          flipkart_client_id == o.flipkart_client_id &&
          flipkart_client_secret == o.flipkart_client_secret &&
          allegro_client_id == o.allegro_client_id &&
          allegro_client_secret == o.allegro_client_secret &&
          allegro_access_token == o.allegro_access_token &&
          allegro_refresh_token == o.allegro_refresh_token &&
          allegro_environment == o.allegro_environment &&
          zoho_client_id == o.zoho_client_id &&
          zoho_client_secret == o.zoho_client_secret &&
          zoho_refresh_token == o.zoho_refresh_token &&
          zoho_region == o.zoho_region &&
          otto_client_id == o.otto_client_id &&
          otto_client_secret == o.otto_client_secret &&
          otto_app_id == o.otto_app_id &&
          otto_refresh_token == o.otto_refresh_token &&
          otto_environment == o.otto_environment &&
          otto_access_token == o.otto_access_token &&
          tiktokshop_app_key == o.tiktokshop_app_key &&
          tiktokshop_app_secret == o.tiktokshop_app_secret &&
          tiktokshop_refresh_token == o.tiktokshop_refresh_token &&
          tiktokshop_access_token == o.tiktokshop_access_token &&
          salla_client_id == o.salla_client_id &&
          salla_client_secret == o.salla_client_secret &&
          salla_refresh_token == o.salla_refresh_token &&
          salla_access_token == o.salla_access_token &&
          temu_app_key == o.temu_app_key &&
          temu_app_secret == o.temu_app_secret &&
          temu_access_token == o.temu_access_token &&
          temu_region == o.temu_region
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [cart_id, store_url, bridge_url, store_root, store_key, validate_version, verify, db_tables_prefix, user_agent, ftp_host, ftp_user, ftp_password, ftp_port, ftp_store_dir, _3dcart_private_key, _3dcart_access_token, _3dcartapi_api_key, amazon_sp_client_id, amazon_sp_client_secret, amazon_sp_refresh_token, amazon_sp_aws_region, amazon_sp_api_environment, amazon_seller_id, aspdotnetstorefront_api_user, aspdotnetstorefront_api_pass, bigcommerceapi_admin_account, bigcommerceapi_api_path, bigcommerceapi_api_key, bigcommerceapi_client_id, bigcommerceapi_access_token, bigcommerceapi_context, bol_api_key, bol_api_secret, bol_retailer_id, bigcartel_user_name, bigcartel_password, bricklink_consumer_key, bricklink_consumer_secret, bricklink_token, bricklink_token_secret, demandware_client_id, demandware_api_password, demandware_user_name, demandware_user_password, ebay_client_id, ebay_client_secret, ebay_runame, ebay_access_token, ebay_refresh_token, ebay_environment, ebay_site_id, walmart_client_id, walmart_client_secret, walmart_environment, walmart_channel_type, walmart_region, ecwid_acess_token, ecwid_store_id, lazada_app_id, lazada_app_secret, lazada_refresh_token, lazada_region, lightspeed_api_key, lightspeed_api_secret, etsy_keystring, etsy_shared_secret, etsy_access_token, etsy_token_secret, etsy_client_id, etsy_refresh_token, facebook_app_id, facebook_app_secret, facebook_access_token, facebook_business_id, neto_api_key, neto_api_username, shopline_access_token, shopline_app_key, shopline_app_secret, shopline_shared_secret, shopify_access_token, shopify_api_key, shopify_api_password, shopify_shared_secret, shopee_partner_id, shopee_partner_key, shopee_shop_id, shopee_refresh_token, shopee_region, shopee_environment, shoplazza_access_token, shoplazza_shared_secret, shopware_access_key, unas_api_key, shopware_api_key, shopware_api_secret, miva_access_token, miva_signature, tiendanube_user_id, tiendanube_access_token, tiendanube_client_secret, volusion_login, volusion_password, hybris_client_id, hybris_client_secret, hybris_username, hybris_password, hybris_websites, square_client_id, square_client_secret, square_refresh_token, squarespace_api_key, squarespace_client_id, squarespace_client_secret, squarespace_access_token, squarespace_refresh_token, commercehq_api_key, commercehq_api_password, wc_consumer_key, wc_consumer_secret, magento_consumer_key, magento_consumer_secret, magento_access_token, magento_token_secret, prestashop_webservice_key, wix_app_id, wix_app_secret_key, wix_instance_id, wix_refresh_token, mercado_libre_app_id, mercado_libre_app_secret_key, mercado_libre_refresh_token, zid_client_id, zid_client_secret, zid_access_token, zid_authorization, zid_refresh_token, flipkart_client_id, flipkart_client_secret, allegro_client_id, allegro_client_secret, allegro_access_token, allegro_refresh_token, allegro_environment, zoho_client_id, zoho_client_secret, zoho_refresh_token, zoho_region, otto_client_id, otto_client_secret, otto_app_id, otto_refresh_token, otto_environment, otto_access_token, tiktokshop_app_key, tiktokshop_app_secret, tiktokshop_refresh_token, tiktokshop_access_token, salla_client_id, salla_client_secret, salla_refresh_token, salla_access_token, temu_app_key, temu_app_secret, temu_access_token, temu_region].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      attributes = attributes.transform_keys(&:to_sym)
      transformed_hash = {}
      openapi_types.each_pair do |key, type|
        if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = nil
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[attribute_map[key]].is_a?(Array)
            transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
          end
        elsif !attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
        end
      end
      new(transformed_hash)
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def self._deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = OpenapiClient.const_get(type)
        klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
